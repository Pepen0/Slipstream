name: Create branch on issue

on:
  issues:
    types: [opened]

jobs:
  create-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Determine branch name
        id: branch
        shell: bash
        run: |
          title="${{ github.event.issue.title }}"

          # choose allowed prefix (fix | feature | docs)
          if echo "$title" | grep -Eqi "(bug|fix)"; then
            prefix="fix"
          elif echo "$title" | grep -Eqi "(doc|docs|documentation)"; then
            prefix="docs"
          else
            prefix="feature"
          fi

          # slugify title (lowercase, hyphens, max 50 chars)
          slug="$(printf '%s' "$title" \
            | tr '[:upper:]' '[:lower:]' \
            | sed -E 's/[^a-z0-9]+/-/g; s/^-+|-+$//g' \
            | cut -c1-50)"

          echo "name=${prefix}/issue-${{ github.event.issue.number }}${slug:+-$slug}" >> "$GITHUB_OUTPUT"

      - name: Resolve default branch HEAD SHA
        id: head
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { data: r } = await github.rest.repos.get({ owner, repo });
            const def = r.default_branch;
            const { data: ref } = await github.rest.git.getRef({
              owner, repo, ref: `heads/${def}`
            });
            core.setOutput('sha', ref.object.sha);
            core.setOutput('default_branch', def);

      - name: Create branch for this issue
        uses: peterjgrainger/action-create-branch@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: refs/heads/${{ steps.branch.outputs.name }}
          sha: ${{ steps.head.outputs.sha }}
